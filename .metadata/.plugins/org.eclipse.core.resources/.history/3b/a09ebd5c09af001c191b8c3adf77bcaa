package com.simple.basic.command;

import javax.validation.constraints.Email;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@AllArgsConstructor
@Data
@Builder
@NoArgsConstructor
public class ValidVO {
	
	/*1. 스프링부트 JAP라이브러리를 사용하면 기본타입은 null을 가질수 없기 때문에 값에 맵핑이 안됨.
	     그래서 wrapper형으로 반드시 선언
	  2. 유효성 검사에 필요한 멤버변수에 어노테이션 설정
	     규제 @NotBlank > @NotEmpty > @NotNull
	  -  @NotNull : null을 허용하지 않음. (String, Long 등등에 적용가능)
	  -  @NotBlank : null, "", " " 허용하지 않음. (String에 적용)
	  -  @NotEmpty : null, "" 허용하지 않음. (String, Array 등등에 적용가능)
	  -  @Pattern : 정규표현 형식에 문자열로 정의 할수 있음.(String에 적용가능)
	  -  @Email : 이메일 형식만 허용.
	*/
	//문자는 NotBlank
	@NotBlank(message = "이름은 공백일 수 없습니다")
	private String name;
	//숫자는 NotNull
	@NotNull(message = "급여는 필수 입니다")
	private Integer salary;
	@Pattern(regexp = "문자열 형태의 정규표현")
	private String phone;
	
	@Email
	private String email;
}
